***COMANDOS PARA CRIAR UMA API USANDO O PRISMA***
npx nest g res Users //para gerar arquivos "CRUD" API REST
npx prisma migrate dev --name init //gerar o banco de dados e atualização
npx prisma studio //abre um localhost para visualizar o banco de dados 
nest g service prisma // criar a API do Prisma Client para consultas de banco de dados dentro de um serviço.
npx nest generate resource NewCRUD //gera um novo pacote de arquivos "CRUD" 

****MODIFICAR OS ARQUIVOS****
prisma.service.ts
/*import { Injectable, OnModuleInit } from '@nestjs/common';
import { PrismaClient } from '@prisma/client';

@Injectable()
export class PrismaService extends PrismaClient implements OnModuleInit {
  async onModuleInit() {
    await this.$connect();
  }
}*/

user.module.ts
/*import { Module } from '@nestjs/common';
import { UsersService } from './users.service';
import { UsersController } from './users.controller';
import { PrismaService } from 'src/prisma/prisma.service';

@Module({
  controllers: [UsersController],
  providers: [UsersService, PrismaService],
})
export class UsersModule {}*/

//Sites Referências:
https://www.prisma.io/docs/orm/prisma-schema/data-model/relations
https://docs.nestjs.com/recipes/prisma#use-prisma-client-in-your-nestjs-services
https://docs.nestjs.com/security/authentication
